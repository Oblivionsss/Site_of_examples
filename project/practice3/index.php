<?php
header('Content-Type: text/html; charset=utf-8');
// Эмулятор банкомата. 
// В терминале есть ограниченное количество купюр, младшая 100, старшая 5к
// Пользователь вводит необходимую сумму для снятия со счета
// Необхдимо придумать алгоритм:
// Который проверит, хватит ли купюр для выдачи всей суммы
// Который проверит кратна ли сумма 100, так как минимально допустимая купюра именно эта
// Выдаст сумму наименьшим количеством купюр
// (доп) отсортирует массив содержащий купюры, так как этого требует цикл foreach в функции bank

if (empty($_POST)){
    echo "Добрый день. Мы рады приветствовать Вас в нашем банкомате. <br>Сейчас у нас в системе находится:<br>";
    $bills  = [];
    $bills[100]     = rand(1, 10);
    $bills[5000]    = rand(1, 10);
    $bills[500]     = rand(1, 10);
    $bills[1000]    = rand(1, 10);

    foreach ($bills as $key => $value) {
        echo "{$value} купюр {$key}-го значения<br>"; 
    }

    echo "Какую бы сумму вы хотели снять?<br>";
}

elseif (isset($_POST['number'])){  
    $bills  = []; 
    $amount = $_POST['number'];
    $bills  = preg_replace('#U7F#', '"', $_POST['bills']);
    $bills  = json_decode($bills, true);

    echo "Сумма: $amount <br>";

    /*Функция, повзоляющая распечатать полученный результат в зависимости от типа получаемого значение в аргументе*/
    function print_result($result){
        if (gettype($result) == 'string')           // Если тип аргумента $result строка - значит просто распечатываем echo,
            echo $result;                           // так как там отчет по найденной ошибке
        else {
            echo "Выдача возможна, число купюр: <br>";
            foreach ($result as $key => $value) {   // Иначе печатаем результат в виде перебора массива с помощью функции foreach
                echo "$key" . "x" . $value . " ";
            }
        }
    }

    // Основная функция, принимающая введенное значение и массив и выдающая результат в виде строки ошибки, либо массива 
    function bank ($amount, $bills){                                                    // с основными результатами 
        $mas = array();                             // Вспомогательный массив, который будет хранить основные результаты
        $checkNumb = checkNumb($amount);            // Вызываем функцию проверки корректности введенных данных
        switch ($checkNumb) {                       // Первые три ветви - "отрицательный" итог проверки на корректность данных  
            case 'numbErChar':                                                          // и сразу же выход из условия свитч и функции
                return "Ошибка ввода (нечисловые символы), проверьте, пожалуйста, корректность данных";
                break;
            
            case 'nubmNeg':
                return "Вы ввели отрицательное число, проверьте введенные данные";
                break;

            case 'zero':
                return "Вы ввели 0, пожалуйста, введите целое число";
                break;
            
            case 'numbMultiple':
                return "Извините, невозможно выдать указанную сумму, так как она не кратна 100, повторите попытку";
                break;

            default:                                // Основная ветвь алгоритма расчета купюр для выдачи     
            $lengthAmount = count($bills);

                foreach ($bills as $key => $value) {        // Перебираем массив с нашими купюрами в банкомате, и проверяем
                                                            // Хватает ли их для выдачи необходимой суммы
                    if ($amount){     
                        if (!floor ($amount / $key)){       // Если наша сумма не кратна текущей проверяемой купюре то переходим к
                            continue;                       // следующей купюре
                        }
                        else if (floor ($amount / $key) <= $bills[$key]){   // Если купюр хватает то сохраняем количество необходимых купюр
                            $count = floor ($amount / $key);                            // в вспомогательный массив $mas
                            $mas[$key] = $count;
                            $amount -= ($count * $key);                     // Массив $amount - проверочный, позволяет узнавать какую сумму
                        }                                                               // необходимо еще просчитать
                        else {                                              // Если купюр текущего номанала не хватает для того чтобы покрыть
                            $count = $bills[$key];                          // текующую сумму исчерпывающе, то записываем в $mas сколько есть
                            $mas[$key] = $count;                                        // в банкомате
                            $amount -= ($count * $key);
                        }
                    }
                    else {          // Как только $amount стал нулевым - значит все расчеты произведены и можно выходить из цикла
                        break;
                    }
                }
                if ($amount){       // Если $amount не нулевой, а положительный, значит купюр в банкомате не хватило
                    return "Извините не хватает денег в банкомате:С";
                }
                else return $mas; 
        }
    }

    function checkNumb ($numb) {
        if ($numb == 0) {
            return "zero";
        }
        if (!(ctype_digit($numb))){     // Проверка на то, что в строке только цифры
            return "numbErChar";
        }
        if ($numb < 0) {                // Проверка на то, что число неотрицательное
            return "nubmNeg";
        }       
        if ($numb % 100){          // Проверка на кратность минимально возможной купюры
            return "numbMultiple";
        }
        else return 1;
    } 

    krsort ($bills);           // Отсортируем массив по ключу в порядке убывания
    $result = bank($amount, $bills);    // Вызовем основную функцию рассчета выдачи денег
    print_result ($result);             // Вызовем вспомогательную функцию для вывода информации
}

$bills  = json_encode($bills);
$bills  = preg_replace('#\"#', 'U7F', $bills);            // Меняем регуляркой все ковычки, чтобы передать через POST

echo<<<_END
<form action="index.php"method="post">
<input type="text"      name="number"   value="0">
<input type="hidden"    name="bills"    value="$bills"
<input type="submit"    value="Снять наличные"></form>
_END;
?>
